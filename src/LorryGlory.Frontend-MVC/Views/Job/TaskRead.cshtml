@*
    TODO
*@
@using LorryGlory_Frontend_MVC.ViewModels.Task
@model ReadTaskViewModel
@{
}

<div class="p-4 bg-gray-100">

    <!-- Title -->
    <div class="flex justify-center mb-4">
        <h1 class="text-lg font-bold">
            @if (Model != null && !string.IsNullOrEmpty(Model.Title))
            {
                <span class="text-lg" style="font-size: 0.9em;">@Model.Title</span>
            }
            else
            {
                <span class="text-lg" style="font-size: 0.9em;">Not found</span>
            }
        </h1>
    </div>

    <!-- Back to Menu Button -->
    <div class="flex items-center justify-between border-b border-gray-300 pb-2">
        <a asp-controller="Job" asp-action="JobRead" asp-route-id="@Model.FK_JobId" class="flex items-center space-x-2">
            <svg class="h-6 w-6 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a1 1 0 01-.707-.293l-7-7a1 1 0 010-1.414l7-7a1 1 0 011.414 1.414L4.414 10l6.293 6.293a1 1 0 01-.707 1.707z" clip-rule="evenodd" />
            </svg>
        </a>
        <div class="w-6"></div>
    </div>

    <div class="flex flex-col items-center justify-center mt-3">
        <!-- Status -->
        <div class="text-center mb-4">
            <span class="text-lg font-bold">
                @if (Model != null && Model.Status.HasValue)
                {
                    <h1>Status - @(Model.Status?.ToString())</h1>
                }
                else
                {
                    <span>Not found</span>
                }
            </span>
        </div>

        <!-- Edit and Delete -->
        <div class="flex space-x-2">
            <form method="get" asp-controller="Job" asp-action="TaskEdit" class="inline">
                <input type="hidden" name="id" value="@Model?.Id" />
                <input type="hidden" name="jobId" value="@Model?.FK_JobId" />
                <button type="submit" class="px-4 py-2 bg-yellow-500 text-white text-sm font-semibold rounded hover:bg-yellow-600">
                    Edit
                </button>
            </form>
            <form method="post" asp-controller="Job" asp-action="TaskDelete" class="inline" onsubmit="return confirm('Are you sure you want to delete this item?');">
                <input type="hidden" name="id" value="@Model?.Id" />
                <input type="hidden" name="jobId" value="@Model?.FK_JobId" />
                <button type="submit" class="px-4 py-2 bg-red-500 text-white text-sm font-semibold rounded hover:bg-red-600">
                    Delete
                </button>
            </form>
        </div>
    </div>

    <div class="space-y-4 mt-4">

        <!-- Driver -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-4 flex items-center">
            <!-- Left Section: Avatar and Contact Icons -->
            <div class="text-center flex-shrink-0 mr-4">
                <!-- Avatar Icon -->
                <div class=" rounded-full h-16 w-16 flex items-center justify-center mb-2">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-full w-full p-2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                    </svg>
                </div>

                <div class="flex items-center space-x-4">
                    <!-- Phone Icon -->
                    @if (Model?.StaffMember != null && !string.IsNullOrEmpty(Model.StaffMember.PersonalNumber))
                    {
                        <a href="tel:@Model.StaffMember.PersonalNumber" class="flex items-center justify-center text-gray-500">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z" />
                            </svg>
                        </a>
                    }
                    else
                    {
                        <div class="flex items-center justify-center text-gray-500">
                            <!-- Fallback content if no phone number -->
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c-.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z" />
                            </svg>
                        </div>
                    }

                    <!-- Message Icon -->
                    <div class="flex items-center justify-center text-gray-500">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 0 1 .865-.501 48.172 48.172 0 0 0 3.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018Z" />
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Right Section: Driver Info -->
            <div class="flex flex-col">
                <span class="font-semibold">
                    @if (Model != null && Model.StaffMember != null &&
                    !string.IsNullOrEmpty(Model.StaffMember.FirstName) &&
                    !string.IsNullOrEmpty(Model.StaffMember.LastName))
                    {
                        
                        @($"{Model.StaffMember.FirstName} {Model.StaffMember.LastName}")
                        
                    }
                    else
                    {
                        <span>Not found</span>
                    }
                </span>
                <span class="font-semibold mb-4">
                    @if (Model != null && !string.IsNullOrEmpty(Model.StaffMember?.PersonalNumber))
                    {
                        @Model.StaffMember?.PersonalNumber
                    }
                    else
                    {
                        <span>Not found</span>
                    }
                </span>
            </div>

        </div>

        <!-- Vehicle -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-4 flex items-center">
            <!-- Left Section: Avatar and Contact Icons -->
            <div class="text-center flex-shrink-0 mr-4">
                <!-- Avatar Icon -->
                <div class=" rounded-full h-16 w-16 flex items-center justify-center mb-2">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-full w-full p-2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 18.75a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m3 0h6m-9 0H3.375a1.125 1.125 0 0 1-1.125-1.125V14.25m17.25 4.5a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m3 0h1.125c.621 0 1.129-.504 1.09-1.124a17.902 17.902 0 0 0-3.213-9.193 2.056 2.056 0 0 0-1.58-.86H14.25M16.5 18.75h-2.25m0-11.177v-.958c0-.568-.422-1.048-.987-1.106a48.554 48.554 0 0 0-10.026 0 1.106 1.106 0 0 0-.987 1.106v7.635m12-6.677v6.677m0 4.5v-4.5m0 0h-12" />
                    </svg>
                </div>
            </div>

            <!-- Right Section: Company Info -->
            <div class="flex flex-col">
                <span class="font-semibold">
                    @if (Model != null && !string.IsNullOrEmpty(Model.Vehicle?.Model))
                    {
                        @Model.Vehicle?.Model
                    }
                    else
                    {
                        <span>Not found</span>
                    }
                </span>
                <span class="font-medium">
                    @if (Model != null && !string.IsNullOrEmpty(Model.Vehicle?.Type))
                    {
                        @Model.Vehicle?.Type
                    }
                    else
                    {
                        <span>Not found</span>
                    }
                </span>
                <span class="font-semibold mb-4">
                    @if (Model != null && !string.IsNullOrEmpty(Model.Vehicle?.RegNo))
                    {
                        @Model.Vehicle?.RegNo
                    }
                    else
                    {
                        <span>Not found</span>
                    }
                </span>
            </div>
        </div>


        <!-- Description -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-4">
            <h2 class="font-semibold text-gray-800 mb-2">Description</h2>
            <div class="divide-y divide-gray-200 text-sm">
                <div class="py-2 flex justify-between">
                    <span class="font-medium">
                        @if (Model != null && !string.IsNullOrEmpty(Model.Description))
                        {
                            @Model.Description
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
            </div>
        </div>

        <!-- Task Information -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-4">
            <h2 class="font-semibold text-gray-800 mb-2">Task Information</h2>
            <div class="divide-y divide-gray-200 text-sm">
                <div class="py-2 flex flex-col">
                    <span class ="text-sm text-gray-500">Estimated start time</span>
                    <span class="font-semibold">
                        @if (Model != null && Model.StartTime.HasValue)
                        {
                            @Model.StartTime.Value.ToString("yyyy-MM-dd ' / ' HH:mm:ss")
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex flex-col">
                    <span class ="text-sm text-gray-500">Estimated end time</span>
                    <span class="font-semibold">
                        @if (Model != null && Model.EndTime.HasValue)
                        {
                            @Model.EndTime.Value.ToString("yyyy-MM-dd ' / ' HH:mm:ss")
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex flex-col">
                    <span class="text-sm text-gray-500">Contact Name</span>
                    <span class="font-semibold ">
                        @if (Model != null && !string.IsNullOrEmpty(Model.ContactPerson?.Name))
                        {
                            @Model.ContactPerson?.Name
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex justify-between">
                    <!-- Left Section: Contact Info -->
                    <div class="py-2 flex flex-col">
                        <span class="text-sm text-gray-500">Contact Number</span>
                        <span class="font-semibold">
                            @if (Model != null && !string.IsNullOrEmpty(Model.ContactPerson?.PhoneNumber))
                            {
                                @Model.ContactPerson?.PhoneNumber
                            }
                            else
                            {
                                <span>Not found</span>
                            }
                        </span>
                    </div>

                    <!-- Right Section: Phone Icon or Fallback -->
                    <div class="flex items-center justify-center">
                        @if (Model?.ContactPerson != null && !string.IsNullOrEmpty(Model.ContactPerson.PhoneNumber))
                        {
                            <a href="tel:@Model.ContactPerson.PhoneNumber" class="flex items-center justify-center text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <!-- Fallback content if no phone number -->
                            <div class="flex items-center justify-center text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c-.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z" />
                                </svg>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Pick up -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-4">
            <h2 class="font-semibold text-gray-800 mb-2">Pick up</h2>
            <div class="divide-y divide-gray-200 text-sm">
                <div class="py-2 flex justify-between">
                    <!-- Left Section: Contact Info -->
                    <div class="py-2 flex flex-col">
                        <span class="text-sm text-gray-500">Address</span>
                        <span class="font-semibold">
                            @if (Model != null && !string.IsNullOrEmpty(Model.PickupAddress.AddressStreet))
                            {
                                @Model.PickupAddress.AddressStreet
                            }
                            else
                            {
                                <span>Not found</span>
                            }
                        </span>
                    </div>
                    <!-- Right Section: Phone Icon or Fallback -->
                    <div class="flex items-center justify-center">
                        @if (Model != null && !string.IsNullOrEmpty(Model.PickupAddress.AddressStreet) &&
                        !string.IsNullOrEmpty(Model.PickupAddress.PostalCode) &&
                        !string.IsNullOrEmpty(Model.PickupAddress.AddressCity) &&
                        !string.IsNullOrEmpty(Model.PickupAddress.AddressCountry))
                        {
                            // Combine the address components into one string
                            var address = $"{Model.PickupAddress.AddressStreet}, {Model.PickupAddress.PostalCode}, {Model.PickupAddress.AddressCity}, {Model.PickupAddress.AddressCountry}";
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 cursor-pointer"
                                    data-address="@address" onclick="openGoogleMaps(this)">
                                <path stroke-linecap="round" stroke-linejoin="round" d="m20.893 13.393-1.135-1.135a2.252 2.252 0 0 1-.421-.585l-1.08-2.16a.414.414 0 0 0-.663-.107.827.827 0 0 1-.812.21l-1.273-.363a.89.89 0 0 0-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.212.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 0 1-1.81 1.025 1.055 1.055 0 0 1-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.655-.261a2.25 2.25 0 0 1-1.383-2.46l.007-.042a2.25 2.25 0 0 1 .29-.787l.09-.15a2.25 2.25 0 0 1 2.37-1.048l1.178.236a1.125 1.125 0 0 0 1.302-.795l.208-.73a1.125 1.125 0 0 0-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 0 1-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 0 1-1.458-1.137l1.411-2.353a2.25 2.25 0 0 0 .286-.76m11.928 9.869A9 9 0 0 0 8.965 3.525m11.928 9.868A9 9 0 1 1 8.965 3.525" />
                            </svg>
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </div>
                </div>
                <div class="py-2 flex flex-col">
                    <span class="text-sm text-gray-500">Postal Code</span>
                    <span class="font-semibold">
                        @if (Model != null && !string.IsNullOrEmpty(Model.PickupAddress.PostalCode))
                        {
                            @Model.PickupAddress.PostalCode
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex flex-col">
                    <span class="text-sm text-gray-500">City</span>
                    <span class="font-semibold">
                        @if (Model != null && !string.IsNullOrEmpty(Model.PickupAddress.AddressCity))
                        {
                            @Model.PickupAddress.AddressCity
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex flex-col">
                    <span class="text-sm text-gray-500">Country</span>
                    <span class="font-semibold">
                        @if (Model != null && !string.IsNullOrEmpty(Model.PickupAddress.AddressCountry))
                        {
                            @Model.PickupAddress.AddressCountry
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
            </div>
        </div>

        <!-- Drop off -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-4">
            <h2 class="font-semibold text-gray-800 mb-2">Pick up</h2>
            <div class="divide-y divide-gray-200 text-sm">
                <div class="py-2 flex justify-between">
                    <!-- Left Section: Contact Info -->
                    <div class="py-2 flex flex-col">
                        <span class="text-sm text-gray-500">Address</span>
                        <span class="font-semibold">
                            @if (Model != null && !string.IsNullOrEmpty(Model.DeliveryAddress.AddressStreet))
                            {
                                @Model.DeliveryAddress.AddressStreet
                            }
                            else
                            {
                                <span>Not found</span>
                            }
                        </span>
                    </div>
                    <!-- Right Section: Phone Icon or Fallback -->
                    <div class="flex items-center justify-center">
                        @if (Model != null && !string.IsNullOrEmpty(Model.DeliveryAddress.AddressStreet) &&
                        !string.IsNullOrEmpty(Model.DeliveryAddress.PostalCode) &&
                        !string.IsNullOrEmpty(Model.DeliveryAddress.AddressCity) &&
                        !string.IsNullOrEmpty(Model.DeliveryAddress.AddressCountry))
                        {
                            // Combine the address components into one string
                            var address = $"{Model.DeliveryAddress.AddressStreet}, {Model.DeliveryAddress.PostalCode}, {Model.DeliveryAddress.AddressCity}, {Model.DeliveryAddress.AddressCountry}";
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 cursor-pointer"
                                 data-address="@address" onclick="openGoogleMaps(this)">
                                <path stroke-linecap="round" stroke-linejoin="round" d="m20.893 13.393-1.135-1.135a2.252 2.252 0 0 1-.421-.585l-1.08-2.16a.414.414 0 0 0-.663-.107.827.827 0 0 1-.812.21l-1.273-.363a.89.89 0 0 0-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.212.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 0 1-1.81 1.025 1.055 1.055 0 0 1-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.655-.261a2.25 2.25 0 0 1-1.383-2.46l.007-.042a2.25 2.25 0 0 1 .29-.787l.09-.15a2.25 2.25 0 0 1 2.37-1.048l1.178.236a1.125 1.125 0 0 0 1.302-.795l.208-.73a1.125 1.125 0 0 0-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 0 1-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 0 1-1.458-1.137l1.411-2.353a2.25 2.25 0 0 0 .286-.76m11.928 9.869A9 9 0 0 0 8.965 3.525m11.928 9.868A9 9 0 1 1 8.965 3.525" />
                            </svg>
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </div>
                </div>
                <div class="py-2 flex flex-col">
                    <span class="text-sm text-gray-500">Postal Code</span>
                    <span class="font-semibold">
                        @if (Model != null && !string.IsNullOrEmpty(Model.DeliveryAddress.PostalCode))
                        {
                            @Model.DeliveryAddress.PostalCode
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex flex-col">
                    <span class="text-sm text-gray-500">City</span>
                    <span class="font-semibold">
                        @if (Model != null && !string.IsNullOrEmpty(Model.DeliveryAddress.AddressCity))
                        {
                            @Model.DeliveryAddress.AddressCity
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex flex-col">
                    <span class="text-sm text-gray-500">Country</span>
                    <span class="font-semibold">
                        @if (Model != null && !string.IsNullOrEmpty(Model.DeliveryAddress.AddressCountry))
                        {
                            @Model.DeliveryAddress.AddressCountry
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
            </div>
        </div>

        <!-- Task Report -->
        <div class="bg-white p-4 rounded-lg shadow-md mb-4">
            <h2 class="font-semibold text-gray-800 mb-2">Task report</h2>
            <div class="divide-y divide-gray-200 text-sm">
                <div class="py-2 flex flex-col">
                    <span class="font-semibold">
                        @if (Model != null && !string.IsNullOrEmpty(Model.JobTaskReport?.Description))
                        {
                            @Model.JobTaskReport?.Description
                        }
                        else
                        {
                            <span>Not found</span>
                        }
                    </span>
                </div>
            </div>
        </div>

        <script>
            function openGoogleMaps(svgElement) {
                var address = svgElement.getAttribute("data-address");
                var encodedAddress = encodeURIComponent(address);
                window.open('https://www.google.com/maps/search/' + encodedAddress, '_blank');
            }
        </script>

    </div>
</div>
