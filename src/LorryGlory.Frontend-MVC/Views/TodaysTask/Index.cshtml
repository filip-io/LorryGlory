@*
    Current vehicle for fast overview for driver to complete the job safe and secure.

    Number in TODO = placement in code, scroll down to see the corresponding.
    TODO list:
    1a = Needs to fetch from 'felanmälan?'
    2a = Need to implement check if truck is older then 30 years then: display Totalweight instead of Taxweight.
    + Need to implement tax weight in model, there is only total weight and dont give justice to what the driver can carry.
    3a = Need to implement actual weight based on calculation, this is a calculation based on the weight of the truck and the load.
    4a = Need to implement proper check for BK class calculated from distance of axels and show proper data.
*@
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Todays Task";
}
@model LorryGlory_Frontend_MVC.Models.JobTasks.TodaysJobTaskViewModel;

<div x-data="{ activeTab: 'vehicle' }" class="p-4 bg-gray-100">

    <div class="flex justify-center mb-4">
        <h1 class="text-lg font-bold">Scandic</h1>
    </div>

    <div class="flex items-center justify-between border-b border-gray-300 pb-2">
        <button class="text-gray-600" aria-label="Back to menu">
            <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a1 1 0 01-.707-.293l-7-7a1 1 0 010-1.414l7-7a1 1 0 011.414 1.414L4.414 10l6.293 6.293a1 1 0 01-.707 1.707z" clip-rule="evenodd" />
            </svg>
        </button>

        <div class="flex space-x-4">
            <button @@click="activeTab = 'vehicle'" :class="{'border-b-2 border-blue-500 text-gray-900': activeTab === 'vehicle', 'text-gray-500': activeTab !== 'vehicle'}" class="font-semibold px-4">
                Vehicle
            </button>
            <button @@click="activeTab = 'task'" :class="{'border-b-2 border-blue-500 text-gray-900': activeTab === 'task', 'text-gray-500': activeTab !== 'task'}" class="font-semibold px-4">
                Task
            </button>
        </div>

        <div class="w-6"></div>
    </div>

    <div x-show="activeTab === 'vehicle'" class="space-y-6 mt-4">

        <div class="flex flex-col items-center space-y-4">
            <div class="flex items-center border-2 border-gray-300 rounded-lg bg-white shadow-md w-full max-w-md mx-auto">
                <div class="w-14 h-full flex-shrink-0">
                    <img src="/images/regnskylt.jpg" alt="Country Code" class="w-full h-full object-cover rounded-l-lg">
                </div>
                <div class="flex-1 flex items-center justify-center text-gray-800 font-bold text-2xl uppercase tracking-widest">
                    @Model.Vehicle.RegNo
                </div>
            </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-lg">
            <h2 class="font-semibold text-gray-900 mb-4">Calculated Weight</h2>
            <div class="flex space-x-4">
                <input id="weightInput" type="number" placeholder="Enter load weight..." class="w-full p-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none">
                <select id="weightType" class="p-2 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-blue-500 focus:outline-none">
                    <option value="gross">Gross</option>
                    <option value="load">Load</option>
                </select>
                <button onclick="calculateWeight()" class="p-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
                    Calculate
                </button>
            </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-lg">
            <h2 class="font-semibold text-gray-900 mb-4">Basic Information</h2>
            <div class="divide-y divide-gray-200 text-sm">
                <div class="py-2 flex justify-between">
                    <span>Curb Weight</span>
                    <span class="font-medium">@Model.Vehicle.TechnicalData.KerbWeight KG</span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Max Load Weight</span>
                    <span class="font-medium">@Model.Vehicle.TechnicalData.LoadWeight KG</span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Total Weight</span>
                    <span class="font-medium">@Model.Vehicle.TechnicalData.TotalWeight KG</span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Actual Weight</span>
                    <span id="actualWeight" class="font-medium">---</span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Height</span>
                    <span class="font-medium">@Model.Vehicle.TechnicalData.Height MM</span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Length</span>
                    <span class="font-medium">@Model.Vehicle.TechnicalData.Length MM</span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Emission Class</span>
                    <span class="font-medium">@Model.Vehicle.Eco.EuroClass</span>
                </div>
            </div>
        </div>

        @if (Model.Vehicle.TechnicalData != null)
        {
            <div class="bg-white p-6 rounded-lg shadow-lg">
                <h2 class="font-semibold text-gray-900 mb-4">Axle Information</h2>
                <div class="text-sm">
                    <div class="py-2 flex justify-between">
                        <span>Total Axle Distance</span>
                        <span class="font-medium">@ViewBag.TotalAxleDistance meters</span>
                    </div>
                </div>
            </div>
        }

        <div class="bg-white p-6 rounded-lg shadow-lg">
            <h2 class="font-semibold text-gray-900 mb-4">Load Capacity Class</h2>
            <div class="text-sm">
                <div class="py-2 flex justify-between">
                    <span>Allowed Weight (BK1):</span>
                    <span>
                        @ViewBag.AllowedWeightBK1 tons
                        @if (ViewBag.AllowedWeightBK1 >= 30)
                        {
                            <span class="text-green-600 font-medium">✔️</span>
                        }
                        else
                        {
                            <span class="text-red-600 font-medium">❌</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Allowed Weight (BK2):</span>
                    <span>
                        @ViewBag.AllowedWeightBK2 tons
                        @if (ViewBag.AllowedWeightBK2 >= 28)
                        {
                            <span class="text-green-600 font-medium">✔️</span>
                        }
                        else
                        {
                            <span class="text-red-600 font-medium">❌</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Allowed Weight (BK3):</span>
                    <span>
                        @ViewBag.AllowedWeightBK3 tons
                        @if (ViewBag.AllowedWeightBK3 >= 15)
                        {
                            <span class="text-green-600 font-medium">✔️</span>
                        }
                        else
                        {
                            <span class="text-red-600 font-medium">❌</span>
                        }
                    </span>
                </div>
                <div class="py-2 flex justify-between">
                    <span>Allowed Weight (BK4):</span>
                    <span>
                        @ViewBag.AllowedWeightBK4 tons
                        @if (ViewBag.AllowedWeightBK4 >= 14)
                        {
                            <span class="text-green-600 font-medium">✔️</span>
                        }
                        else
                        {
                            <span class="text-red-600 font-medium">❌</span>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class="flex space-x-4">
            <button class="flex-1 bg-red-600 text-white py-2 px-4 rounded-lg shadow-md hover:bg-red-700 transition">
                Report Problem
            </button>
            <button class="flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg shadow-md hover:bg-blue-700 transition">
                Change Vehicle
            </button>
            <button class="p-3 bg-gray-100 border rounded-lg hover:bg-gray-200 transition">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-gray-800">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 11.25a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9zm0 0a6.75 6.75 0 0 0-6.75 6.75m13.5 0a6.75 6.75 0 0 0-6.75-6.75m0 0V21" />
                </svg>
            </button>
        </div>
    </div>

<div x-show="activeTab === 'task'" class="space-y-6 mt-4">

    <div class="bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">@Model.Title</h2>
        <div class="text-sm text-gray-600 space-y-2">
            <div><strong>Date:</strong> <span>@DateOnly.FromDateTime(Model.StartTime)</span></div>
            <div><strong>Start Time:</strong> <span>@Model.StartTime.TimeOfDay</span></div>
            <div><strong>End Time:</strong> <span>@Model.EndTime.TimeOfDay</span></div>
            <div><strong>Contact:</strong> <span>@Model.ContactPerson.Name, @Model.ContactPerson.PhoneNumber</span></div>
            <div class="italic text-gray-500">@Model.Description</div>
        </div>
    </div>


    <div class="bg-gray-50 p-6 rounded-lg shadow-lg">
        <h3 class="text-lg font-medium text-gray-900 mb-3">Pickup Address</h3>
        <div class="text-sm text-gray-600 space-y-2">
            <div><strong>Street:</strong> <span>@Model.PickupAddress.AddressStreet</span></div>
            <div><strong>Postal Code:</strong> <span>@Model.PickupAddress.PostalCode</span></div>
            <div><strong>City:</strong> <span>@Model.PickupAddress.AddressCity</span></div>
            <div><strong>Country:</strong> <span>@Model.PickupAddress.AddressCountry</span></div>
        </div>
    </div>


    <div class="bg-gray-50 p-6 rounded-lg shadow-lg">
        <h3 class="text-lg font-medium text-gray-900 mb-3">Delivery Address</h3>
        <div class="text-sm text-gray-600 space-y-2">
            <div><strong>Street:</strong> <span>@Model.DeliveryAddress.AddressStreet</span></div>
            <div><strong>Postal Code:</strong> <span>@Model.DeliveryAddress.PostalCode</span></div>
            <div><strong>City:</strong> <span>@Model.DeliveryAddress.AddressCity</span></div>
            <div><strong>Country:</strong> <span>@Model.DeliveryAddress.AddressCountry</span></div>
        </div>
    </div>


    <div class="bg-gray-50 p-6 rounded-lg shadow-lg">
        <h3 class="text-lg font-medium text-gray-900 mb-3">Client Information</h3>
        <div class="text-sm text-gray-600 space-y-2">
            <div><strong>Name:</strong> <span>@Model.ContactPerson.Name</span></div>
            <div><strong>Phone:</strong> <span>@Model.ContactPerson.PhoneNumber</span></div>
        </div>
    </div>


    <div class="bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">Completion Details</h2>
        <div class="grid grid-cols-2 gap-4 mb-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Start Time</label>
                <input type="time" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">End Time</label>
                <input type="time" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Notes</label>
            <textarea class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" rows="4" placeholder="Add any notes or comments..."></textarea>
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Attach Image</label>
            <button class="w-full p-2 bg-gray-100 border border-gray-300 rounded-lg flex items-center justify-center hover:bg-gray-200">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-5 h-5 mr-2 text-gray-600">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16s1.5-2 4-2 4 2 4 2M2 12a10 10 0 0020 0M2 8a10 10 0 0120 0M9 2a4 4 0 108 0m-1 18l2-2-2 2zM7 20l2-2-2 2z" />
                </svg>
                Upload File
            </button>
        </div>
        <button class="w-full py-3 px-6 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition">
            Complete Task
        </button>
    </div>
</div>



<script>
    // in till js
               function calculateWeight() {
                   const weightInput = parseFloat(document.getElementById('weightInput').value) || 0;
                   const weightType = document.getElementById('weightType').value;
                   const curbWeight = @Model.Vehicle.TechnicalData.KerbWeight;

                   let actualWeight;
                   if (weightType === 'load') {
                       actualWeight = curbWeight + weightInput;
                   } else if (weightType === 'gross') {
                       actualWeight = weightInput;
                   }

                   document.getElementById('actualWeight').textContent = `${actualWeight} KG`;
               }
</script>